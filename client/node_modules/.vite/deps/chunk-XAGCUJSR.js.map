{
  "version": 3,
  "sources": ["../../@material/web/button/internal/shared-styles.css.ts", "../../@material/web/internal/controller/element-internals.ts", "../../@material/web/internal/controller/form-submitter.ts", "../../@material/web/button/internal/button.ts"],
  "sourcesContent": ["/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;height:var(--_container-height);outline:none;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){cursor:default;pointer-events:none}.button{display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-inline-size:64px;border:none;outline:none;user-select:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;inline-size:100%;position:relative;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);gap:8px}.button::before{background-color:var(--_container-color);border-radius:inherit;content:\"\";inset:0;position:absolute}.button::-moz-focus-inner{padding:0;border:0}.button:hover{color:var(--_hover-label-text-color);cursor:pointer}.button:focus{color:var(--_focus-label-text-color)}.button:active{color:var(--_pressed-label-text-color);outline:none}.button:disabled .button__label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.button:disabled::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.button::before{content:\"\";box-sizing:border-box;border:1px solid CanvasText;border-radius:inherit;inset:0;pointer-events:none;position:absolute}.button:disabled{--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-opacity: 1}}.button,.button__ripple{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.button::after,.button::before,md-elevation,.button__ripple{z-index:-1}.button--icon-leading{padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}.button--icon-trailing{padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}.link-button-wrapper{inline-size:100%}.button ::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}.button:hover ::slotted([slot=icon]){color:var(--_hover-icon-color)}.button:focus ::slotted([slot=icon]){color:var(--_focus-icon-color)}.button:active ::slotted([slot=icon]){color:var(--_pressed-icon-color)}.button:disabled ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=none]) .touch{display:none}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement {\n *   static formAssociated = true;\n *\n *   [internals] = this.attachInternals();\n * }\n *\n * function getForm(element: MyElement) {\n *   return element[internals].form;\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n\n/**\n * An instance with `ElementInternals`.\n *\n * Use this when protected access is needed for an instance's `ElementInternals`\n * from other files. A unique symbol is used to access the internals.\n */\nexport interface WithInternals {\n  /**\n   * An instance's `ElementInternals`.\n   */\n  [internals]: ElementInternals;\n}\n", "/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {isServer, ReactiveElement} from 'lit';\n\nimport {internals, WithInternals} from './element-internals.js';\n\n/**\n * A string indicating the form submission behavior of the element.\n *\n * - submit: The element submits the form. This is the default value if the\n * attribute is not specified, or if it is dynamically changed to an empty or\n * invalid value.\n * - reset: The element resets the form.\n * - button: The element does nothing.\n */\nexport type FormSubmitterType = 'button'|'submit'|'reset';\n\n/**\n * An element that can submit or reset a `<form>`, similar to\n * `<button type=\"submit\">`.\n */\nexport interface FormSubmitter extends ReactiveElement, WithInternals {\n  /**\n   * A string indicating the form submission behavior of the element.\n   *\n   * - submit: The element submits the form. This is the default value if the\n   * attribute is not specified, or if it is dynamically changed to an empty or\n   * invalid value.\n   * - reset: The element resets the form.\n   * - button: The element does nothing.\n   */\n  type: FormSubmitterType;\n\n  /**\n   * The HTML name to use in form submission. When combined with a `value`, the\n   * submitting button's name/value will be added to the form.\n   *\n   * Names must reflect to a `name` attribute for form integration.\n   */\n  name: string;\n\n  /**\n   * The value of the button. When combined with a `name`, the submitting\n   * button's name/value will be added to the form.\n   */\n  value: string;\n}\n\ntype FormSubmitterConstructor =\n    (new () => FormSubmitter)|(abstract new () => FormSubmitter);\n\n/**\n * Sets up an element's constructor to enable form submission. The element\n * instance should be form associated and have a `type` property.\n *\n * A click listener is added to each element instance. If the click is not\n * default prevented, it will submit the element's form, if any.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement {\n *   static {\n *     setupFormSubmitter(MyElement);\n *   }\n *\n *   static formAssociated = true;\n *\n *   type: FormSubmitterType = 'submit';\n *\n *   [internals] = this.attachInternals();\n * }\n * ```\n *\n * @param ctor The form submitter element's constructor.\n */\nexport function setupFormSubmitter(ctor: FormSubmitterConstructor) {\n  if (isServer) {\n    return;\n  }\n\n  (ctor as unknown as typeof ReactiveElement).addInitializer(instance => {\n    const submitter = instance as FormSubmitter;\n    submitter.addEventListener('click', async event => {\n      const {type, [internals]: elementInternals} = submitter;\n      const {form} = elementInternals;\n      if (!form || type === 'button') {\n        return;\n      }\n\n      // Wait a microtask for event bubbling to complete.\n      await new Promise<void>(resolve => {\n        resolve();\n      });\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (type === 'reset') {\n        form.reset();\n        return;\n      }\n\n      // form.requestSubmit(submitter) does not work with form associated custom\n      // elements. This patches the dispatched submit event to add the correct\n      // `submitter`.\n      // See https://github.com/WICG/webcomponents/issues/814\n      form.addEventListener('submit', submitEvent => {\n        Object.defineProperty(submitEvent, 'submitter', {\n          configurable: true,\n          enumerable: true,\n          get: () => submitter,\n        });\n      }, {capture: true, once: true});\n\n      elementInternals.setFormValue(submitter.value);\n      form.requestSubmit();\n    });\n  });\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, isServer, LitElement, nothing} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {html as staticHtml, literal} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {internals} from '../../internal/controller/element-internals.js';\nimport {dispatchActivationClick, isActivationClick} from '../../internal/controller/events.js';\nimport {FormSubmitter, FormSubmitterType, setupFormSubmitter} from '../../internal/controller/form-submitter.js';\n\n/**\n * A button component.\n */\nexport abstract class Button extends LitElement implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(Button);\n    setupFormSubmitter(Button);\n  }\n\n  /** @nocollapse */\n  static readonly formAssociated = true;\n\n  /** @nocollapse */\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /**\n   * Whether or not the button is disabled.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * The URL that the link button points to.\n   */\n  @property() href = '';\n\n  /**\n   * Where to display the linked `href` URL for a link button. Common options\n   * include `_blank` to open in a new tab.\n   */\n  @property() target: '_blank'|'_parent'|'_self'|'_top'|'' = '';\n\n  /**\n   * Whether to render the icon at the inline end of the label rather than the\n   * inline start.\n   *\n   * _Note:_ Link buttons cannot have trailing icons.\n   */\n  @property({type: Boolean, attribute: 'trailing-icon'}) trailingIcon = false;\n\n  /**\n   * Whether to display the icon or not.\n   */\n  @property({type: Boolean, attribute: 'has-icon'}) hasIcon = false;\n\n  @property() type: FormSubmitterType = 'submit';\n\n  @property() value = '';\n\n  get name() {\n    return this.getAttribute('name') ?? '';\n  }\n  set name(name: string) {\n    this.setAttribute('name', name);\n  }\n\n  /**\n   * The associated form element with which this element's value will submit.\n   */\n  get form() {\n    return this[internals].form;\n  }\n\n  @query('.button') private readonly buttonElement!: HTMLElement|null;\n\n  @queryAssignedElements({slot: 'icon', flatten: true})\n  private readonly assignedIcons!: HTMLElement[];\n\n  /** @private */\n  [internals] =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  constructor() {\n    super();\n    if (!isServer) {\n      this.addEventListener('click', this.handleActivationClick);\n    }\n  }\n\n  override focus() {\n    this.buttonElement?.focus();\n  }\n\n  override blur() {\n    this.buttonElement?.blur();\n  }\n\n  protected override render() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n\n    const button = this.href ? literal`a` : literal`button`;\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    return staticHtml`\n      <${button}\n        class=\"button ${classMap(this.getRenderClasses())}\"\n        ?disabled=${isDisabled}\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-haspopup=\"${ariaHasPopup || nothing}\"\n        aria-expanded=\"${ariaExpanded || nothing}\"\n        href=${this.href || nothing}\n        target=${this.target || nothing}\n      >${this.renderContent()}</${button}>`;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'button--icon-leading': !this.trailingIcon && this.hasIcon,\n      'button--icon-trailing': this.trailingIcon && this.hasIcon,\n    };\n  }\n\n  protected renderElevation?(): unknown;\n\n  protected renderOutline?(): unknown;\n\n  private renderContent() {\n    // Link buttons may not be disabled\n    const isDisabled = this.disabled && !this.href;\n    const icon =\n        html`<slot name=\"icon\" @slotchange=\"${this.handleSlotChange}\"></slot>`;\n\n    return html`\n      ${this.renderElevation?.()}\n      ${this.renderOutline?.()}\n      <md-focus-ring part=\"focus-ring\"></md-focus-ring>\n      <md-ripple class=\"button__ripple\" ?disabled=\"${isDisabled}\"></md-ripple>\n      <span class=\"touch\"></span>\n      ${this.trailingIcon ? nothing : icon}\n      <span class=\"button__label\"><slot></slot></span>\n      ${this.trailingIcon ? icon : nothing}\n    `;\n  }\n\n  private readonly handleActivationClick = (event: MouseEvent) => {\n    if (!isActivationClick((event)) || !this.buttonElement) {\n      return;\n    }\n    this.focus();\n    dispatchActivationClick(this.buttonElement);\n  };\n\n  private handleSlotChange() {\n    this.hasIcon = this.assignedIcons.length > 0;\n  }\n}\n"],
  "mappings": "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",
  "names": ["_a", "html"]
}
